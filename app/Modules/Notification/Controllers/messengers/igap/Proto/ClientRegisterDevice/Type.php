<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientRegisterDevice.proto

namespace Proto\ClientRegisterDevice;

use UnexpectedValueException;

/**
 * Protobuf type <code>proto.ClientRegisterDevice.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>GENERIC = 0;</code>
     */
    const GENERIC = 0;
    /**
     * Generated from protobuf enum <code>ANDROID = 1;</code>
     */
    const ANDROID = 1;
    /**
     * Generated from protobuf enum <code>IOS = 2;</code>
     */
    const IOS = 2;
    /**
     * Generated from protobuf enum <code>WEB = 3;</code>
     */
    const WEB = 3;

    private static $valueToName = [
        self::GENERIC => 'GENERIC',
        self::ANDROID => 'ANDROID',
        self::IOS => 'IOS',
        self::WEB => 'WEB',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Proto\ClientRegisterDevice_Type::class);

