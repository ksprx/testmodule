<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientSearchRoomHistory.proto

namespace Proto\ClientSearchRoomHistory;

use UnexpectedValueException;

/**
 * Protobuf type <code>proto.ClientSearchRoomHistory.Filter</code>
 */
class Filter
{
    /**
     * Generated from protobuf enum <code>IMAGE = 0;</code>
     */
    const IMAGE = 0;
    /**
     * Generated from protobuf enum <code>VIDEO = 1;</code>
     */
    const VIDEO = 1;
    /**
     * Generated from protobuf enum <code>AUDIO = 2;</code>
     */
    const AUDIO = 2;
    /**
     * Generated from protobuf enum <code>VOICE = 3;</code>
     */
    const VOICE = 3;
    /**
     * Generated from protobuf enum <code>GIF = 4;</code>
     */
    const GIF = 4;
    /**
     * Generated from protobuf enum <code>FILE = 5;</code>
     */
    const FILE = 5;
    /**
     * Generated from protobuf enum <code>URL = 6;</code>
     */
    const URL = 6;

    private static $valueToName = [
        self::IMAGE => 'IMAGE',
        self::VIDEO => 'VIDEO',
        self::AUDIO => 'AUDIO',
        self::VOICE => 'VOICE',
        self::GIF => 'GIF',
        self::FILE => 'FILE',
        self::URL => 'URL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Filter::class, \Proto\ClientSearchRoomHistory_Filter::class);

