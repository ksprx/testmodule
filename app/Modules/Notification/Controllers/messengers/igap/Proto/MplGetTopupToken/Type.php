<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MplGetTopupToken.proto

namespace Proto\MplGetTopupToken;

use UnexpectedValueException;

/**
 * Protobuf type <code>proto.MplGetTopupToken.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>IRANCELL_PREPAID = 0;</code>
     */
    const IRANCELL_PREPAID = 0;
    /**
     * Generated from protobuf enum <code>IRANCELL_WOW = 1;</code>
     */
    const IRANCELL_WOW = 1;
    /**
     * Generated from protobuf enum <code>IRANCELL_WIMAX = 2;</code>
     */
    const IRANCELL_WIMAX = 2;
    /**
     * Generated from protobuf enum <code>IRANCELL_POSTPAID = 3;</code>
     */
    const IRANCELL_POSTPAID = 3;
    /**
     * Generated from protobuf enum <code>MCI = 4;</code>
     */
    const MCI = 4;
    /**
     * Generated from protobuf enum <code>RIGHTEL = 5;</code>
     */
    const RIGHTEL = 5;

    private static $valueToName = [
        self::IRANCELL_PREPAID => 'IRANCELL_PREPAID',
        self::IRANCELL_WOW => 'IRANCELL_WOW',
        self::IRANCELL_WIMAX => 'IRANCELL_WIMAX',
        self::IRANCELL_POSTPAID => 'IRANCELL_POSTPAID',
        self::MCI => 'MCI',
        self::RIGHTEL => 'RIGHTEL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Proto\MplGetTopupToken_Type::class);

