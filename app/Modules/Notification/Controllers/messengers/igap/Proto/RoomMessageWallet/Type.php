<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Global.proto

namespace Proto\RoomMessageWallet;

use UnexpectedValueException;

/**
 * Protobuf type <code>proto.RoomMessageWallet.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>MONEY_TRANSFER = 0;</code>
     */
    const MONEY_TRANSFER = 0;
    /**
     * Generated from protobuf enum <code>PAYMENT = 1;</code>
     */
    const PAYMENT = 1;
    /**
     * Generated from protobuf enum <code>CARD_TO_CARD = 2;</code>
     */
    const CARD_TO_CARD = 2;
    /**
     * Generated from protobuf enum <code>TOPUP = 3;</code>
     */
    const TOPUP = 3;
    /**
     * Generated from protobuf enum <code>BILL = 4;</code>
     */
    const BILL = 4;

    private static $valueToName = [
        self::MONEY_TRANSFER => 'MONEY_TRANSFER',
        self::PAYMENT => 'PAYMENT',
        self::CARD_TO_CARD => 'CARD_TO_CARD',
        self::TOPUP => 'TOPUP',
        self::BILL => 'BILL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Proto\RoomMessageWallet_Type::class);

