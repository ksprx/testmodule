<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientGetPromote.proto

namespace Proto\ClientGetPromoteResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.ClientGetPromoteResponse.Promote</code>
 */
class Promote extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.proto.ClientGetPromoteResponse.Promote.Type type = 1;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>uint64 id = 2;</code>
     */
    protected $id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *     @type int|string $id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClientGetPromote::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.proto.ClientGetPromoteResponse.Promote.Type type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.proto.ClientGetPromoteResponse.Promote.Type type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Proto\ClientGetPromoteResponse\Promote\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 id = 2;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>uint64 id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint64($var);
        $this->id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Promote::class, \Proto\ClientGetPromoteResponse_Promote::class);

