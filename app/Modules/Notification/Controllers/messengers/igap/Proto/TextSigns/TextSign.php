<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Global.proto

namespace Proto\TextSigns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.TextSigns.TextSign</code>
 */
class TextSign extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.proto.TextSigns.TextSign.Type type = 1;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>int32 start_index = 2;</code>
     */
    protected $start_index = 0;
    /**
     * Generated from protobuf field <code>int32 end_index = 3;</code>
     */
    protected $end_index = 0;
    /**
     * Generated from protobuf field <code>string link = 4;</code>
     */
    protected $link = '';
    /**
     * Generated from protobuf field <code>int64 user_id = 5;</code>
     */
    protected $user_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *     @type int $start_index
     *     @type int $end_index
     *     @type string $link
     *     @type int|string $user_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBGlobal::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.proto.TextSigns.TextSign.Type type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.proto.TextSigns.TextSign.Type type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Proto\TextSigns\TextSign\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 start_index = 2;</code>
     * @return int
     */
    public function getStartIndex()
    {
        return $this->start_index;
    }

    /**
     * Generated from protobuf field <code>int32 start_index = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStartIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->start_index = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 end_index = 3;</code>
     * @return int
     */
    public function getEndIndex()
    {
        return $this->end_index;
    }

    /**
     * Generated from protobuf field <code>int32 end_index = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setEndIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->end_index = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string link = 4;</code>
     * @return string
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * Generated from protobuf field <code>string link = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setLink($var)
    {
        GPBUtil::checkString($var, True);
        $this->link = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 user_id = 5;</code>
     * @return int|string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * Generated from protobuf field <code>int64 user_id = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkInt64($var);
        $this->user_id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TextSign::class, \Proto\TextSigns_TextSign::class);

