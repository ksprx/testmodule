<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SignalingOffer.proto

namespace Proto\SignalingOffer;

use UnexpectedValueException;

/**
 * Protobuf type <code>proto.SignalingOffer.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>VOICE_CALLING = 0;</code>
     */
    const VOICE_CALLING = 0;
    /**
     * Generated from protobuf enum <code>VIDEO_CALLING = 1;</code>
     */
    const VIDEO_CALLING = 1;
    /**
     * Generated from protobuf enum <code>SCREEN_SHARING = 2;</code>
     */
    const SCREEN_SHARING = 2;
    /**
     * Generated from protobuf enum <code>SECRET_CHAT = 3;</code>
     */
    const SECRET_CHAT = 3;

    private static $valueToName = [
        self::VOICE_CALLING => 'VOICE_CALLING',
        self::VIDEO_CALLING => 'VIDEO_CALLING',
        self::SCREEN_SHARING => 'SCREEN_SHARING',
        self::SECRET_CHAT => 'SECRET_CHAT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Proto\SignalingOffer_Type::class);

